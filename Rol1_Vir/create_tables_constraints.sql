create database usuariocredencial;

use usuariocredencial;

-- creaci칩n de tabla usuario
create table usuario(
	
	id BIGINT PRIMARY KEY AUTO_INCREMENT, -- BIGINT para que coincida con LONG de Java
	eliminado BOOLEAN DEFAULT FALSE, -- por defecto no est치 eliminado
    
    -- informaci칩n personal de usuario
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
	username VARCHAR(30) NOT NULL UNIQUE,
	email VARCHAR(120) NOT NULL UNIQUE,
    
    -- se elimino fecha de_nacimiento ya que el CHECH (fecha_nacimiento < CURRENT TIME) generaba un error
    
	activo BOOLEAN NOT NULL DEFAULT TRUE, -- por defecto est치 activo
    -- la fecha y hora se establece autom치ticamente al crear el usuario
	fechaRegistro DATETIME DEFAULT CURRENT_TIMESTAMP 
	-- credencial CredencialAcceso referencia 1a1 a B 
);

-- creaci칩n de tabla credencial
create table credencial(

	id BIGINT PRIMARY KEY AUTO_INCREMENT,
	eliminado BOOLEAN DEFAULT FALSE,
	contrase침a VARCHAR(255) NOT NULL,
    
    -- El salt es un dato p칰blico (se guarda junto al hash) que hace que cada contrase침a encriptada sea 칰nica, 
    -- incluso si las contrase침as originales eran iguales. Es una medida de seguridad fundamental. 游댏
    salt VARCHAR(64),
    
    ultimo_cambio DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- se actualiza autom치ticamente al modificarse
    require_reset BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- clave for치nea
    id_usuario BIGINT NOT NULL UNIQUE, -- debe ser del mismo tipo que id en tabla usuario (BIGINT)
    CONSTRAINT fk_credencial_usuario -- para darle nombre 칰nico y descriptivo a la regla que se crea
		FOREIGN KEY (id_usuario) REFERENCES usuario(id)
);
        FOREIGN KEY (id_usuario) 
        REFERENCES usuario(id)
);
